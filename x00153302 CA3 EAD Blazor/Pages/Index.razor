@page "/"
@using Basketball_CA3_EAD.Classes
@using Syncfusion.Blazor.Grids
@inject HttpClient Http


<h3>Basketball Player</h3>
<h3>@strfeedback</h3>
<br />

@{
    var SearchTool = new List<string>() { "Search" };
    var SearchColumns = new string[] { "first_name", "last_name", "position" };
}

@if (found)
{
    <SfGrid DataSource="@data.data" AllowPaging="true" AllowSorting="true" Toolbar="@SearchTool">
        <GridSearchSettings Fields="@SearchColumns">
        </GridSearchSettings>
        <GridPageSettings PageSize="5" PageCount="5" PageSizes="@paging"></GridPageSettings>
        <GridSortSettings>
            <GridSortColumns>
                <GridSortColumn Field="First_name" Direction="SortDirection.Ascending">

                </GridSortColumn>
            </GridSortColumns>
        </GridSortSettings>
        <GridColumns>
            <GridColumn Field="@nameof(data.first_name)" HeaderText="First Name"></GridColumn>
            <GridColumn Field="@nameof(data.last_name)" HeaderText="Last Name"></GridColumn>
            <GridColumn Field="@nameof(data.position)" HeaderText="Position"></GridColumn>
        </GridColumns>
    </SfGrid>
}
@strfeedback

@code {
    string strfeedback;
    private bool found;

    private Player data;
    //paging
    string[] paging = new string[] { "All", "5", "10", "15", "20" };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            data = await Http.GetFromJsonAsync<Player>("https://www.balldontlie.io/api/v1/players");
            found = true;
            strfeedback = String.Empty;
        }
        catch (Exception e)
        {
            found = false;
            strfeedback = e.Message;
        }
    }
}


